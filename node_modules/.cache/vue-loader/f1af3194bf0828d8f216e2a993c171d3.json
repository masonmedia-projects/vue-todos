{"remainingRequest":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewmason/Projects/vue_projects/vue_todos/src/components/todos/Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/src/components/todos/Todo.vue","mtime":1642104228651},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/cache-loader/dist/cjs.js","mtime":1640663325985},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/babel-loader/lib/index.js","mtime":1640663326451},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/cache-loader/dist/cjs.js","mtime":1640663325985},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js","mtime":1640663326594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdUb2RvJywKICAgIHByb3BzOiBbCiAgICAgICAgJ3RvZG8nLAogICAgICAgICdjb21wbGV0ZUNsYXNzJwogICAgXSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaXNFZGl0aW5nOiBmYWxzZSwKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHNob3dGb3JtKCkgewogICAgICAgICAgICB0aGlzLmlzRWRpdGluZyA9IHRydWU7CiAgICAgICAgfSwKICAgICAgICBoaWRlRm9ybSgpIHsKICAgICAgICAgICAgdGhpcy5pc0VkaXRpbmcgPSBmYWxzZTsKICAgICAgICB9LAogICAgICAgIGRlbGV0ZVRvZG8odG9kbykgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdkZWxldGUtdG9kbycsIHRvZG8pCiAgICAgICAgfSwKICAgICAgICB0b2dnbGVDb21wbGV0ZSh0b2RvKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3RvZ2dsZS1jb21wbGV0ZScsIHRvZG8pCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo.vue","sourceRoot":"src/components/todos","sourcesContent":["<template>\n    <div>\n        <b-media key=\"1\" right-align vertical-align=\"center\"\n        class=\"rounded-lg shadow p-3 mb-3\"\n        :class=\"todo.done ? 'bg-grape text-light text-strike' : 'bg-lavender'\"\n        v-show=\"!isEditing\">\n            <template #aside>\n                <b-button class=\"p-2 mr-2\" :variant=\"todo.done ? 'pink' : 'purple'\" @click=\"toggleComplete(todo)\">\n                  <b-icon v-if=\"todo.done\" icon=\"check2-all\" font-scale=\"1.5\"></b-icon>\n                  <b-icon v-else icon=\"check2\" font-scale=\"1.5\"></b-icon>\n                </b-button>\n                <b-button class=\"p-2 mr-2\" variant=\"purple\" @click=\"showForm\">\n                  <b-icon icon=\"pencil\" font-scale=\"1.5\"></b-icon>\n                </b-button>\n                <b-button class=\"p-2\" variant=\"purple\" @click=\"deleteTodo(todo)\">\n                  <b-icon icon=\"trash\" font-scale=\"1.5\"></b-icon>\n                </b-button>\n            </template>\n            <div>\n                <p class=\"h5 py-3 m-0\">{{ todo.title }}</p>\n            </div>\n        </b-media>\n        <!-- edit mode -->\n        <b-media key=\"2\" right-align vertical-align=\"center\" \n        class=\"bg-lavender shadow p-3 mb-3 py-4\"\n        v-show=\"isEditing\">\n            <template #aside>\n                <b-button class=\"p-2\" variant=\"pink\" @click=\"hideForm\">\n                  <b-icon icon=\"x\" font-scale=\"1.5\"></b-icon>\n                </b-button>\n            </template>\n            <div class=\"d-flex\">\n                <input type='text' class=\"mr-2 border-right-0 border-top-0 border-left-0 border-bottom border-secondary bg-lavender\" \n                v-model=\"todo.title\" />\n                <!-- <input type='text' class=\"mr-2 border-right-0 border-top-0 border-left-0 border-bottom border-secondary bg-lavender\" \n                v-model=\"todo.project\" /> -->\n            </div>\n        </b-media>\n    </div>\n\n    <!-- <b-card :title=\"todo.title\" class=\"p-3 mr-2 mb-2 shadow\">\n        <div class=\"content\" v-show=\"!isEditing\">\n            <div class='header'>\n                {{ todo.title }}\n            </div>\n            <div class='meta'>\n                {{ todo.project }}\n            </div>\n            <div class='extra content'>\n                <span class='right floated edit icon' v-on:click=\"showForm\">\n                    <b-icon icon=\"pencil-square\" variant=\"dark\" font-scale=\"1\"></b-icon>\n                </span>\n                <b-icon icon=\"trash\" variant=\"dark\" font-scale=\"1\"></b-icon>\n            </div>\n        </div> -->\n        <!-- form is visible when we are in editing mode -->\n        <!-- <div class=\"content\" v-show=\"isEditing\">\n            <div class='ui form'>\n                <div class='field'>\n                <label>Title</label>\n                <input type='text' v-model=\"todo.title\" />\n                </div>\n                <div class='field'>\n                <label>Project</label>\n                <input type='text' v-model=\"todo.project\" />\n                </div>\n                <div class='ui two button attached buttons'>\n                <button class='ui basic blue button' v-on:click=\"hideForm\">\n                    Close X\n                </button>\n                </div>\n            </div>\n        </div> -->\n\n        <!-- <b-button class='' variant=\"success\" v-show=\"!isEditing && todo.done\" disabled>\n            Completed\n        </b-button>\n        <b-button class='' variant=\"danger\" v-show=\"!isEditing && !todo.done\">\n            Completed\n        </b-button>\n    </b-card> -->\n</template>\n\n<script>\nexport default {\n    name: 'Todo',\n    props: [\n        'todo',\n        'completeClass'\n    ],\n    data() {\n        return {\n            isEditing: false,\n        }\n    },\n    methods: {\n        showForm() {\n            this.isEditing = true;\n        },\n        hideForm() {\n            this.isEditing = false;\n        },\n        deleteTodo(todo) {\n            this.$emit('delete-todo', todo)\n        },\n        toggleComplete(todo) {\n            this.$emit('toggle-complete', todo)\n        }\n    }\n}\n</script>"]}]}