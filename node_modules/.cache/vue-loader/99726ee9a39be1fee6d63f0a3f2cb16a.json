{"remainingRequest":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewmason/Projects/vue_projects/vue_todos/src/views/TodoList1.vue?vue&type=style&index=0&id=1240213a&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/src/views/TodoList1.vue","mtime":1646960302947},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/css-loader/dist/cjs.js","mtime":1640663326288},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640663326786},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/postcss-loader/src/index.js","mtime":1640663326447},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/cache-loader/dist/cjs.js","mtime":1640663325985},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js","mtime":1640663326594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tZWRpYS1hc2lkZSB7CiAgbWFyZ2luLXJpZ2h0OiAwOwp9CgoudGV4dC1zdHJpa2UgewogIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOwp9Cg=="},{"version":3,"sources":["TodoList1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;;AAEA;AACA;AACA","file":"TodoList1.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-container fluid \n  class=\"bg-grape min-vh-100 p-4 d-flex justify-content-center align-items-start\">\n  <b-container style=\"max-width: 550px;\">\n    <b-jumbotron class=\"d-flex flex-column justify-content-center align-items-start bg-dark-grape text-light font-weight-bold shadow-lg mb-2 mt-5 p-4 p-md-5\"\n    style=\"min-height: 300px; border-radius: 33px 33px 5px 33px;\">\n      <h1 class=\"font-weight-light display-4 mb-3\">todo<span class=\"text-muted\">list</span></h1>\n      <div class=\"d-flex w-100 pb-3\">\n        <b-button variant=\"purple\" class=\"me-2\">\n          Tasks <b-badge class=\"bg-light text-dark\">{{ this.tasks.length }}</b-badge>\n        </b-button>\n        <b-button variant=\"pink\" class=\"me-2\">\n          Complete <b-badge class=\"bg-light text-dark\">{{ tasks.filter(task => task.completed == true).length }}</b-badge>\n          <!-- Complete <b-badge variant=\"light\">{{ completeTasks.length }}</b-badge> -->\n        </b-button>\n        <b-button variant=\"lavender\">\n          Remaining <b-badge class=\"bg-light text-dark\">{{ tasks.filter(task => task.completed == false).length }}</b-badge>\n          <!-- Remaining <b-badge variant=\"light\">{{ incompleteTasks.length }}</b-badge> -->\n        </b-button>\n      </div>\n\n      <div class=\"input-group mb-3 mt-2\">\n        <button \n        :class=\"newTask.length == 0 ? 'btn-outline-light' : 'btn-light'\" \n        class=\"btn w-25\"\n        type=\"button\" \n        id=\"button-addon1\"\n        @click=\"addTask\">Button</button>\n        <input \n        v-model=\"newTask\"\n        class=\"form-control w-75 bg-dark-grape text-light border-light\"\n        @keyup.enter=\"addTask\"\n        type=\"text\" \n        placeholder=\"Add new todo...\" \n        aria-label=\"Add a new task to your todo list\" \n        aria-describedby=\"button-addon1\">\n      </div>\n    </b-jumbotron>\n\n    <b-row class=\"my-1 mx-0 px-0 pb-4 pt-0\">\n      <b-col lg=\"12\" class=\"px-0\">\n        <b-list-group>\n          <b-list-group-item \n          v-for=\"(task, index) in tasks\" :key=\"index\"\n          :class=\"task.completed ? 'bg-pink text-grape font-italic text-strike' : 'text-light bg-dark-grape'\" \n          class=\"d-flex justify-content-start align-items-center mb-2 p-0 border-0 shadow swing-in\"\n          style=\"border-radius: 25px 0.3rem 0.3rem 25px; transition: all .3s ease\">\n            <!-- :class=\"{ completed : task.completed }\" check tasks array ? completed == true -->\n            <div class=\"p-3\">\n              <p class=\"m-0 p-0\">{{ task.name }}</p>\n            </div>\n            <!-- completed/remove buttons -->\n            <b-button-group class=\"d-flex ms-auto\">\n              <b-button class=\"p-3\" variant=\"pink\" @click=\"toggleComplete(task);\">\n                <b-icon icon=\"check\" font-scale=\"1.5\"></b-icon>\n              </b-button>\n              <b-button class=\"p-3\" variant=\"lavender\" @click=\"removeTask(index)\">\n                <b-icon icon=\"x\" font-scale=\"1.5\"></b-icon>\n              </b-button>\n            </b-button-group>\n          </b-list-group-item>\n\n          <!-- completed tasks -->\n\n          <b-list-group-item \n          v-for=\"(item, index) in completeTasks\" :key=\"index\"\n          :class=\"item.completed ? 'bg-pink text-grape font-italic text-strike' : 'text-light bg-dark-grape'\" \n          class=\"d-flex justify-content-start align-items-center mb-2 p-0 border-0 shadow swing-in\"\n          style=\"border-radius: 25px 0.3rem 0.3rem 25px; transition: all .3s ease\">\n            <!-- :class=\"{ completed : task.completed }\" check tasks array ? completed == true -->\n            <div class=\"p-3\">\n              <p class=\"m-0 p-0\">{{ item.name }}</p>\n            </div>\n            <!-- completed/remove buttons -->\n            <b-button-group class=\"d-flex ms-auto\">\n              <b-button class=\"p-3\" variant=\"pink\" @click=\"toggleComplete(item);\">\n                <b-icon icon=\"check\" font-scale=\"1.5\"></b-icon>\n              </b-button>\n              <b-button class=\"p-3\" variant=\"lavender\" @click=\"removeTask(item)\">\n                <b-icon icon=\"x\" font-scale=\"1.5\"></b-icon>\n              </b-button>\n            </b-button-group>\n          </b-list-group-item>\n\n          <!-- if no tasks... -->\n          <h3 class=\"display-4 text-light fade-in mt-3\" \n          style=\"letter-spacing: -2px;\"\n          v-if=\"this.tasks.length == 0\">Add a task...</h3>\n        </b-list-group>\n        \n      </b-col>\n    </b-row>\n  </b-container>\n  </b-container>\n</template>\n\n\n<script>\n// const moveItem = (array, to, from) => {\n//       const item = array[from];\n//       array.splice(from, 1);\n//       array.splice(to, 0, item);\n//       return array;\n//   }\n\n  let id = 0;\n\n  export default {\n    name: 'Home',\n    data() {\n      return {\n        tasks: [{\n            id: id++,\n            name: 'Clean the fridge',\n            completed: false,\n          },\n          {\n            id: id++,\n            name: 'Walk the dogs',\n            completed: false,\n          },\n          {\n            id: id++,\n            name: 'Buy a new pedal',\n            completed: false,\n          },\n        ],\n        newTask: '',\n        // pinned: false,\n        pinArray: [],\n        completedClass: null,\n      }\n    },\n    computed: {\n      completeTasks() {\n        return this.tasks.filter(task => task.completed)\n      },\n      incompleteTasks() {\n        return this.tasks.filter(task => !task.completed)\n      }\n    },\n    methods: {\n      addTask() {\n        if(this.newTask.length) {\n          // use unshift to add new task to front/top of list\n          this.tasks.unshift({\n            // id: this.tasks.length + 1, => adds 1 to the existing length of the array to get a unique number\n            id: id++, // increments the id variable\n            name: this.newTask,\n            completed: false\n          });\n        }\n        this.newTask = ''\n      },\n      toggleComplete(task) {\n        task.completed = !task.completed\n        // move completed element to end of array X need to toggle it back if marked incomplete\n        // this.tasks.push(this.tasks.splice(this.tasks.indexOf(task), 1)[0]);\n       \n      //  const completed = [...this.tasks, task]\n       console.log(\"complete firing\")\n      },\n      removeTask(index) {\n        // in the tasks array, at the index of the current item selected, remove 1 item = itself\n        this.tasks.splice(index, 1);\n      },\n    },\n    mounted() {}\n  }\n</script>\n\n<style scoped>\n.media-aside {\n  margin-right: 0;\n}\n\n.text-strike {\n  text-decoration: line-through;\n}\n</style>"]}]}