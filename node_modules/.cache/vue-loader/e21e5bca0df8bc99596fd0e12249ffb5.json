{"remainingRequest":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewmason/Projects/vue_projects/vue_todos/src/views/About.vue?vue&type=style&index=0&id=039c5b43&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/src/views/About.vue","mtime":1641611216158},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/css-loader/dist/cjs.js","mtime":1640663326288},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640663326786},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/postcss-loader/src/index.js","mtime":1640663326447},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/cache-loader/dist/cjs.js","mtime":1640663325985},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js","mtime":1640663326594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tZWRpYS1hc2lkZSB7CiAgbWFyZ2luLXJpZ2h0OiAwOwp9Cg=="},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <b-container fluid class=\"min-vh-100 p-4 d-flex justify-content-center align-items-start bg-lavender\">\n\n    <b-container class=\"d-flex flex-column justify-content-center align-items-center\"\n    style=\"max-width: 700px\">\n      <b-jumbotron class=\"w-100 bg-lavender font-weight-bold shadow-lg mb-2 mt-5 px-4 px-md-5\"\n      style=\"border-radius: 33px 33px 5px 33px;\">\n        <h1 class=\"font-weight-light display-4 mb-3\">todo<span class=\"text-muted\">list</span></h1>\n        <div class=\"d-flex pb-3\">\n          <b-button variant=\"purple\" class=\"mr-2\">\n            Todos <b-badge variant=\"light\">{{ this.todos.length }}</b-badge>\n          </b-button>\n          <!-- <b-button variant=\"pink\" class=\"mr-2\">\n            Complete <b-badge variant=\"light\">{{ todos.filter(todo => todo.completed == true).length }}</b-badge>\n          </b-button> -->\n          <!-- <b-button variant=\"lavender\">\n            Remaining <b-badge variant=\"light\">{{ tasks.filter(task => task.completed == false).length }}</b-badge>\n          </b-button> -->\n        </div>\n        <b-row class=\"mx-0\">\n          <b-col lg=\"12\" class=\"px-0 rounded-0\">\n            <b-media class=\"mr-0\">\n              <template #aside>\n                <b-button variant=\"purple\"\n                class=\"px-4 py-2\" \n                style=\"border-radius: 10px 0 0 10px;\" \n                :disabled=\"newTodo.length == 0\"\n                @click=\"addTodo\">Add</b-button>\n              </template>\n              <input v-model=\"newTodo\" placeholder=\"Add new todo\" \n              class=\"p-2 w-100 rounded-right border border-light\"\n              @keyup.enter=\"addTodo\" />\n            </b-media>\n          </b-col>\n        </b-row>\n      </b-jumbotron>\n\n      <b-row align-v=\"center\" class=\"w-100 pt-3\">\n        <todo-list :todos=\"todos\"></todo-list>\n      </b-row>\n    </b-container>\n  </b-container>\n</template>\n\n<script>\nimport TodoList from'../components/todos/TodoList.vue'\n\nexport default {\n  name: 'About',\n  components: {\n    TodoList\n  },\n  data() {\n    return {\n      newTodo: '',\n      todos: [\n                {\n                  id: \"1\",\n                  title: 'Todo A',\n                  done: false,\n                }, \n                {\n                  id: \"2\",\n                  title: 'Todo B',\n                  done: true,\n                }, \n                {\n                  id: \"3\",\n                  title: 'Todo C',\n                  done: false,\n                }, \n                {\n                  id: \"4\",\n                  title: 'Todo D',\n                  done: false,\n                }\n            ],\n      }\n    },\n    methods: {\n      addTodo() {\n        if(this.newTodo.length) {\n          this.todos.unshift({\n            id: this.todos.length + 1,\n            title: this.newTask,\n            completed: false\n          })\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n.media-aside {\n  margin-right: 0;\n}\n</style>\n"]}]}