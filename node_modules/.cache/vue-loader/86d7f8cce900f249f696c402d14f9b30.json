{"remainingRequest":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andrewmason/Projects/vue_projects/vue_todos/src/views/TodoList3.vue?vue&type=style&index=0&id=1207c336&scoped=true&lang=css&","dependencies":[{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/src/views/TodoList3.vue","mtime":1642126747604},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/css-loader/dist/cjs.js","mtime":1640663326288},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640663326786},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/postcss-loader/src/index.js","mtime":1640663326447},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/cache-loader/dist/cjs.js","mtime":1640663325985},{"path":"/Users/andrewmason/Projects/vue_projects/vue_todos/node_modules/vue-loader/lib/index.js","mtime":1640663326594}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2FyZC1mb290ZXIgewogICAgcGFkZGluZzogMC45NXJlbSAxLjI1cmVtOwogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM2Yzc1N2QgIWltcG9ydGFudDsKfQouZm9ybS1jb250cm9sOmZvY3VzIHsKICAgIGNvbG9yOiAjNDk1MDU3OwogICAgYmFja2dyb3VuZC1jb2xvcjogIzBmMGUxNzsKICAgIGJvcmRlci1jb2xvcjogIzgwYmRmZjsKICAgIG91dGxpbmU6IDA7CiAgICBib3gtc2hhZG93OiAwOwp9Cg=="},{"version":3,"sources":["TodoList3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList3.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <b-container fluid class=\"bg-black min-vh-100\">\n        <b-container class=\"p-4 p-md-5\">\n            <b-jumbotron \n            class=\"d-flex flex-column justify-content-center bg-charcoal text-secondary border border-secondary mt-5 p-5\"\n            style=\"border-radius: 33px;\"\n            :style=\"this.todos.length == 0 ? 'min-height: 60vh;' : ''\">\n                <h1 class=\"display-3 font-weight-bold text-orange\"\n                style=\"letter-spacing: -3px\">Todo<span class=\"font-weight-light text-light\">List</span></h1>\n                <p v-if=\"this.todos.length == 0\" class=\"h4 font-weight-light pb-3 pr-5\">This is a todo list app made with BootstrapVue and Vuex. It was inspired by <a class=\"text-orange font-weight-bold\" href=\"https://romig.dev/blog/building-a-to-do-app-with-vue-and-vuex/\" target=\"_blank\">this</a> tutorial. It uses color pallettes from a great pallette combination site called <a class=\"text-orange font-weight-bold\" href=\"https://www.happyhues.co/palettes/13\" target=\"_blank\">Happy Hues.</a> Please get started by adding some tasks to your list below.</p>\n                <p v-else>A todo list application for daily tasks.</p>\n\n                <b-row>\n                    <b-col lg=\"12\" class=\"mb-4\">\n                        <b-media class=\"mr-0\">\n                            <template #aside>\n                            <b-button variant=\"outline-secondary\" \n                            class=\"px-4 py-2\"\n                            style=\"border-radius: 10px 0 0 10px;\" \n                            @click=\"addTodo\">Add</b-button>\n                            </template>\n                            <input type=\"text\" \n                            v-model=\"task\" \n                            placeholder=\"Add a task\"\n                            class=\"p-2 w-100 bg-charcoal text-light border border-secondary border-left-0 rounded-right\"\n                            @keyup.enter=\"addTodo\" />\n                        </b-media>\n                    </b-col>\n                </b-row>\n\n                <div class=\"d-flex flex-wrap flex-md-nowrap\">\n                    <b-button variant=\"dark-orange d-block\" class=\"mr-2 mb-2\" pill>\n                        Tasks <b-badge variant=\"light\">{{ this.todos.length }}</b-badge>\n                    </b-button>\n                    <b-button variant=\"orange\" class=\"mr-2 mb-2\" pill>\n                        Completed <b-badge variant=\"light\">{{ this.todos.filter(todo => todo.completed).length }}</b-badge>\n                    </b-button>\n                    <b-button variant=\"hotpink\" class=\"mb-2\" pill>\n                        Remaining <b-badge variant=\"light\">{{ this.todos.filter(todo => todo.completed == false).length }}</b-badge>\n                    </b-button>\n                </div>\n            </b-jumbotron>\n\n            <!-- tasks grid -->\n            \n            <b-row>\n                <b-col :lg=\"todos.length == 1 ? '12' : '4' && todos.length == 2 ? '6' : '4'\" md=\"6\"\n                class=\"px-2\" v-for=\"todo in todos\" :key=\"todo.id\">\n                    <b-card header-tag=\"header\" footer-tag=\"footer\"\n                    class=\"border border-secondary mb-3\"\n                    :class=\"todo.completed ? 'bg-grey text-strike shadow' : 'bg-charcoal text-light'\"\n                    style=\"border-radius: 33px;\">\n                    <b-card-text>\n                        <!-- <p>{{ todo.id }}</p> -->\n                        <h5 class=\"text-secondary\"><b-badge pill variant=\"secondary\" class=\"font-weight-light border border-secondary text-secondary mb-3 px-3\" style=\"background: transparent\">#{{ todo.id }}</b-badge></h5>\n                        <h5>{{ todo.task }}</h5>\n                    </b-card-text>\n                    <template #footer>\n                        <div class=\"d-flex justify-content-end\">\n                            <b-button class=\"p-1 w-25 mr-1\" pill variant=\"orange\" @click=\"toggleTodo(todo.id)\">\n                                <b-icon icon=\"check\" font-scale=\"1.5\"></b-icon>\n                            </b-button>\n                            <!-- add notes -->\n                            <b-button class=\"p-1 w-25 mr-1\" pill variant=\"dark-orange\" v-b-modal=\"todo.id\">\n                                <b-icon icon=\"pencil\" font-scale=\"1\"></b-icon>\n                            </b-button>\n                            <b-button class=\"p-1 w-25\" pill variant=\"hotpink\" @click=\"deleteTodo(todo.id)\">\n                                <b-icon icon=\"trash\" font-scale=\"1.2\"></b-icon>\n                            </b-button>\n                            <!-- modal -->\n\n                            <b-modal :id=\"todo.id\" centered :title=\"todo.task\"\n                            header-class=\"text-secondary border-secondary\"\n                            footer-class=\"border-secondary\"\n                            content-class=\"bg-charcoal text-light border border-secondary rounded-xl shadow\">\n                                <p class=\"mb-4\">Notes on: {{ todo.task }}</p>\n                                <b-form-textarea\n                                class=\"bg-charcoal text-light border-secondary\"\n                                placeholder=\"Add task notes here...\"\n                                rows=\"6\"\n                                ></b-form-textarea>\n                                <template #modal-footer>\n                                    <b-button class=\"w-25 shadow\" pill variant=\"dark-orange\"\n                                    @click=\"$bvModal.hide(todo.id)\">Close</b-button>\n                                </template>\n                            </b-modal>\n                        </div>\n                    </template>\n                </b-card>\n                </b-col>\n            </b-row>\n\n        </b-container>\n    </b-container>\n</template>\n\n<script>\nexport default {\n    name: 'TodoListThree',\n    data() {\n        return {\n            // empty task to v-model\n            task: '',\n            newId: 0,\n        }\n    },\n    computed:{\n        todos() {\n            return this.$store.getters.getTodos\n        }\n    },\n    methods: {\n        addTodo() {\n            if(this.task.length) {\n                this.$store.dispatch(\"addTodo\", this)\n                // this.todos.length + 1\n                // this.newId++\n                this.task = ''\n            }\n        },\n        toggleTodo(id) {\n            this.$store.dispatch(\"toggleTodo\", id)\n        },\n        deleteTodo(id) {\n            this.$store.dispatch(\"deleteTodo\", id)\n        },\n    },\n}\n</script>\n\n<style scoped>\n.card-footer {\n    padding: 0.95rem 1.25rem;\n    border-top: 1px solid #6c757d !important;\n}\n.form-control:focus {\n    color: #495057;\n    background-color: #0f0e17;\n    border-color: #80bdff;\n    outline: 0;\n    box-shadow: 0;\n}\n</style>"]}]}